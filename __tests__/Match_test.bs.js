// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as TestData$Coronate from "../src/testdata/TestData.bs.js";
import * as PageRound$Coronate from "../src/PageTournament/PageRound.bs.js";
import * as Data_Match$Coronate from "../src/Data/Data_Match.bs.js";
import * as Dom from "@testing-library/dom";
import * as React$1 from "@testing-library/react";
import * as LoadTournament$Coronate from "../src/PageTournament/LoadTournament.bs.js";

require("@testing-library/jest-dom");

test("Ratings are updated correctly after a match.", (function () {
        var page = React$1.render(React.createElement(LoadTournament$Coronate.make, {
                  children: (function (tournament) {
                      return React.createElement(PageRound$Coronate.make, {
                                  roundId: 1,
                                  tournament: tournament
                                });
                    }),
                  tourneyId: TestData$Coronate.simplePairing.id
                }));
        Dom.fireEvent.click(page.getByText(({
                    NAME: "RegExp",
                    VAL: /add newbie mcnewberson/i
                  }).VAL));
        Dom.fireEvent.click(page.getByText(({
                    NAME: "RegExp",
                    VAL: /add grandy mcmaster/i
                  }).VAL));
        Dom.fireEvent.click(page.getByText(({
                    NAME: "RegExp",
                    VAL: /match selected/i
                  }).VAL));
        Dom.fireEvent.change(page.getByDisplayValue("Select winner"), {
              target: {
                value: Data_Match$Coronate.Result.toString(/* WhiteWon */0)
              }
            });
        Dom.fireEvent.click(page.getByText(({
                    NAME: "RegExp",
                    VAL: /view information for match: newbie mcnewberson versus grandy mcmaster/i
                  }).VAL));
        expect(page.getByTestId("rating-Newbie_McNewberson___")).toHaveTextContent("800 (+40)");
      }));

export {
  
}
/*  Not a pure module */
